datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id       String @id @default(uuid())
    username String @unique
    imageURL String
    password String

    posts      Post[]
    favourites Favorite[]

    createdGroups Group[] @relation("author")
    joinedGroups  Group[]

    receivedInvites Invite[] @relation("toUser")
    sentInvites     Invite[] @relation("fromUser")
}

model Group {
    id        String   @id @default(uuid())
    name      String
    createdAt DateTime @default(now())

    posts   Post[]
    users   User[]
    invites Invite[]

    author   User   @relation(name: "author", fields: [authorId], references: [id])
    authorId String
}

model Post {
    id          String   @id @default(uuid())
    description String?
    link        String
    createdAt   DateTime @default(now())
    title       String?
    siteName    String?
    faviconLink String?
    imageLink   String?

    authorId String
    author   User   @relation(fields: [authorId], references: [id])

    groupId String
    group   Group  @relation(fields: [groupId], references: [id])

    favoritedBy Favorite[]
}

model Favorite {
    user   User   @relation(fields: [userId], references: [id])
    userId String

    post   Post   @relation(fields: [postId], references: [id])
    postId String

    @@id([userId, postId])
}

model Invite {
    toUser   User   @relation(name: "toUser", fields: [toUserId], references: [id])
    toUserId String

    fromUser   User   @relation(name: "fromUser", fields: [fromUserId], references: [id])
    fromUserId String

    groupId String
    group   Group  @relation(fields: [groupId], references: [id])

    @@id([toUserId, groupId])
}
